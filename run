#!/bin/sh
API_NAME=rlwm-api

FILE_STAMP=$(date +'%Y%m%d_%H%M%S')
FILE_DATESTAMP=$(date +'%Y-%m-%d')

if [ -f ./.env ]; then . ./.env ; fi
if [ -f ./env.settings ]; then . ./env.settings ; fi
export DB_DATABASE=$DB_DATABASE
export DB_USER=$DB_USER
export DB_PASSWORD=$DB_PASSWORD
export DB_PORT=$DB_PORT
export DB_HOST=$DB_HOST
export DB_SSL=$DB_SSL

export GAPP_EMAIL_URL=$GAPP_EMAIL_URL
export GAPP_EMAIL_API_KEY=$GAPP_EMAIL_API_KEY

api_update_models() {
  MODELS_FILE="src/models/database.gen.ts"
  node scripts/model.js gen > $MODELS_FILE
}

setLAUNCH_IN_TAB() {
  COLOR="$1"
  SCRIPT="$2"
  LAUNCH_IN_TAB="tell application \"Terminal\"
    activate
    tell application \"System Events\" to keystroke \"t\" using command down
    repeat while contents of selected tab of window 1 starts with linefeed
      delay 0.01
    end repeat
    do script \"$SCRIPT\" in window 1
    set current settings of selected tab of window 1 to settings set \"$COLOR\"
    end tell"
}

app_wrap() {
 CURRENT_FOLDER=$PWD
  cd ..
  zip -r "rlwm$FILE_DATESTAMP.zip" rlwm -x "rlwm/web/node_modules/*" \
    -x "rlwm/api/node_modules/*" \
    -x "rlwm/api-gql/node_modules/*" \
    -x "rlwm/directus/_data/opt/app/node_modules/*" -x "rlwm/directus/_data/opt/.pnpm-store/*" \
    -x "rlwm/_data/sql/*" -x "rlwm/web/.next/*"
  cd $CURRENT_FOLDER
}

# API commands
if [ "$1" = "api-gql-dev" ]; then cd api-gql; PORT=$API_GQL_PORT node dev-watch.js ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi

if [ "$1" = "api-dev" ]; then cd api; PORT=$API_PORT node dev-watch.js ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "api-check" ]; then cd api; pnpm run type-check ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "api-build" ]; then cd api; pnpm run build ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "api-update-models" ]; then cd api-gql ; api_update_models ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
# if [ "$1" = "api-check" ]; then cd api; pnpm run type-check ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi

# Directus commands
if [ "$1" = "dt-start" ]; then cd directus; ./run start ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "dt-stop" ]; then cd directus; ./run stop ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "dt-export" ]; then cd directus; ./run export ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "dt-import" ]; then cd directus; ./run import "$2" ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi

# Web dashboard commands
if [ "$1" = "web-dev" ]; then cd web; PORT=$WEB_PORT pnpm dev ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "web-build" ]; then cd web; pnpm build ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "web-start" ]; then cd web; PORT=$WEB_PORT pnpm start ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi
if [ "$1" = "web-check" ]; then cd web; pnpm next lint ; EXITCODE=$? ; cd .. ; exit $EXITCODE ; fi

# Start / stop all components
if [ "$1" = "start-all" ]; then
  # Start database
  ./db start
  sleep 1
  # start directus
  ./run dt-start
  # start Web dashboard
  setLAUNCH_IN_TAB Grass "cd $PWD ; ./run web-dev"
  osascript -e "$LAUNCH_IN_TAB"
  # start API
  sleep 1
  setLAUNCH_IN_TAB Ocean "cd $PWD ; ./run api-dev"
  osascript -e "$LAUNCH_IN_TAB"
  # open web browser tabs
  sleep 3
  open http://localhost:5003 http://localhost:5002
  exit
fi

if [ "$1" = "stop-all" ]; then
  ./run dt-stop
  ./db stop
  exit
fi

if [ "$1" = "install-all" ]; then
  cd api ; pnpm install
  cd ../web ; pnpm install
  exit
fi

if [ "$1" = "wrap" ]; then app_wrap ; exit $? ; fi

echo "Command not found"
